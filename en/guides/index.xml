<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/en/guides/</link>
    <description>Recent content on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/en/guides/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build applications on the cloud based on Serverless</title>
      <link>https://sofastack.github.io/sofastack.tech/en/guides/kc-serverless-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/guides/kc-serverless-demo/</guid>
      <description>As one of the developing directions of cloud native technology, Serverless architecture enables you to further improve resource utilization and focus on service development. With our workshop, you can experience new features such as quick creation of Serveless applications, automatic second-level 0-1-N scaling based on service requests, and quick troubleshooting via log viewer.
Workshop procedure Flow diagram Preview Preparation  Access to Serverless application service address Login with account and password Git clone this project to local  Step 1-1: Publish backend Java application  Select Create quickly Select Java Runtime Upload the code package balance-mng.</description>
    </item>
    
    <item>
      <title>Build microservices with SOFAStack</title>
      <link>https://sofastack.github.io/sofastack.tech/en/guides/sofastack-quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/guides/sofastack-quick-start/</guid>
      <description>Procedure This guide introduces how to quickly build a microservice based on SOFAStack. It mainly includes the following steps.
 Publish service using SOFABoot and SOFARPC Call service using SOFABoot and SOFARPC View Tracer information reported by SOFATracer via ZipKin View Metrics information via SOFALookout  Architecture Tasks 1. Preparation Clone the project demo from GitHub to local
git clone https://github.com/sofastack-guides/kc-sofastack-demo.git  Import the project into IDEA or Eclipse. After import, the interface is as follows:</description>
    </item>
    
    <item>
      <title>Put Service Mesh into practice with CloudMesh</title>
      <link>https://sofastack.github.io/sofastack.tech/en/guides/kc-cloud-mesh-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/guides/kc-cloud-mesh-demo/</guid>
      <description>To run this demo, you should sign up an Ant Financial technology account. Please see Ant Finanical Official Site to see more details.
Demo content Service Mesh applies the communication capabilities between services to the infrastructure, thus decoupling and lightweighting applications.
However, Service Mesh itself is still complex. CloudMesh can easily implement Service Mesh technology by hosting Service Mesh on the cloud.
With our workshop, you can easily deploy applications developed in multiple programming languages ​​to CloudMesh, thereby experiencing the capabilities of Service Mesh.</description>
    </item>
    
    <item>
      <title>SOFABoot dynamic module practice</title>
      <link>https://sofastack.github.io/sofastack.tech/en/guides/kc-sofastack-dynamic-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/guides/kc-sofastack-dynamic-demo/</guid>
      <description>Background kc-sofastack-demo has introduced how to quickly build an e-commerce microservice application and has implemented the service calling link tracking and application status monitoring.
In e-commerce system, the platforms often are not satisfied with the default product listing order, and always want to arrange some products in the conspicuous places. Also, there are some cases where the platforms would like to show different products to different users based on the collected user behaviors.</description>
    </item>
    
    <item>
      <title>Seata distributed transaction practice</title>
      <link>https://sofastack.github.io/sofastack.tech/en/guides/kc-seata-demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/guides/kc-seata-demo/</guid>
      <description>SEATA Demo for SOFAStack Cloud Native Workshop on KubeCon China 2019
AT mode 1.Introduce maven dependencies Introduce the following dependencies into the POM file of the parent project (seata-demo-at/pom.xml):
... &amp;lt;properties&amp;gt; ... &amp;lt;seata.version&amp;gt;0.6.1&amp;lt;/seata.version&amp;gt; &amp;lt;netty4.version&amp;gt;4.1.24.Final&amp;lt;/netty4.version&amp;gt; &amp;lt;/properties&amp;gt; ... &amp;lt;dependencyManagement&amp;gt; &amp;lt;dependencies&amp;gt; ... &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.seata&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;seata-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${seata.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.seata&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;seata-server&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${seata.version}&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;servlet-api&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;io.netty&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;netty-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${netty4.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;/dependencyManagement&amp;gt;  Introduce the following dependencies into the POM file of the stock-mng project (seata-demo-at/stock-mng/pom.</description>
    </item>
    
  </channel>
</rss>