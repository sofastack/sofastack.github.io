<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFAMesh on SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/</link>
    <description>Recent content in SOFAMesh on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installation guide</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-setup-zookeeper-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-setup-zookeeper-installation/</guid>
      <description>Installation guide To use Istio in a non-Kubernetes environment, you must complete the following critical tasks first:
 Configure the Istio API server for the Istio control plane. You can also use MemStore to launch Pilot for demonstration purpose. Manually add SOFAMosn to all microservice instances and start in SideCar mode. Make sure that all requests are routed through SOFAMosn.  Set control plane The Istio control plane consists of four main services: Pilot, Mixter, Citadel, and API server.</description>
    </item>
    
    <item>
      <title>Introduction to Pilot</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-readme/</guid>
      <description>Pilot introduction The SOFAMesh project forked the Istio project to enhance Pilot&amp;rsquo;s capabilities. Currently, the ongoing enhancements are focused on the following three areas:
 Support ZooKeeper as a registry center, and support SOFA, DUBBO and other microservice frameworks using ZooKeeper as a registry center. Support the common protocol framework. Use a common protocol, and support multiple protocols simultaneously based on Kubernetes DNS. Add register agent to support the container models of SOFA, Dubbo and HSF.</description>
    </item>
    
    <item>
      <title>Introduction to SOFAMosn</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/sofa-mosn-readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/sofa-mosn-readme/</guid>
      <description>MOSN, the short name of Modular Observable Smart Network, is a powerful proxy acting as Service Mesh&amp;rsquo;s data plane like Envoy but written in Go. MOSN supports Envoy and Istio&amp;rsquo;s APIs and can be integrated with Istio, so we use MOSN instead of Envoy in SOFAMesh. The initial version of MOSN was jointly contributed by Ant Financial and UC Business Unit of Alibaba, and we look forward to the community to participate in the follow-up development and build an open source excellent project together.</description>
    </item>
    
    <item>
      <title>Register agent</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-register-agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-register-agent/</guid>
      <description>Register agent TBD</description>
    </item>
    
    <item>
      <title>SOFAMesh overview</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/overview/</guid>
      <description>This repository is deprecated. It will contribute to istio directly instead of developing in a forked repo. Please go to see Istioâ€™s doc.
SOFAMesh is a large-scale implementation scheme of Service Mesh based on Istio. On the basis of inheriting the powerful functions and rich features of Istio, in order to meet the performance requirements in large-scale deployments and to respond to the actual situation in the implementation, the following improvements are made:</description>
    </item>
    
    <item>
      <title>Use Docker to get started with Istio</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-setup-zookeeper-quick-start-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-setup-zookeeper-quick-start-docker/</guid>
      <description>This article describes how to quickly start installing and configuring Istio by using Docker Compose.
SOFAMosn can not only support the standard Istio deployment mode, but also support the unilateral Inbound Sidecar or Outbound Sidecar deployment mode to meet the various requirements of users.
Prerequisites  Docker Docker Compose  Install Istio  Download the latest release package. Unzip the installation file and go to the decompressed path. The installation path contains:  Sample application path samples/.</description>
    </item>
    
    <item>
      <title>X-Protocol</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-x-protocol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-x-protocol/</guid>
      <description>X-Protocol X-Protocol is a special common protocol supported by SOFAMesh. It can access different RPC protocols in a unified manner. Because it doesn&amp;rsquo;t require to parse protocols, it can not only provide higher performance, but also reduce the development cost of accessing new protocols.</description>
    </item>
    
    <item>
      <title>ZooKeeper Adapter</title>
      <link>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-zookeeper-adapter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/en/projects/sofa-mesh/pilot-zookeeper-adapter/</guid>
      <description>ZooKeeper Adapter ZooKeeper Adapter is an Adapter plug-in developed in accordance with the Istio registry center extension mechanism. It is used for docking all microservices frameworks that use ZooKeeper as a registry center. Currently, ZooKeeper Adapter supports SOFARPC and will be available for Dubbo soon.
ZooKeeper Adapter uses ZooKeeper&amp;rsquo;s watch mechanism to listen to the change events of service registration information, providing better real-time performance than polling.</description>
    </item>
    
  </channel>
</rss>