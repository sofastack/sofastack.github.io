<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFAMesh on SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/</link>
    <description>Recent content in SOFAMesh on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pilot 介绍</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-readme/</guid>
      <description>SOFA Mesh 项目 fork 了 Istio 项目，对 Pilot 的能力进行增强，目前在进行中的增强主要集中在下面三个方面： - 支持 Zookeeper 作为注册中心，并在此基础上支持 SOFA、DUBBO</description>
    </item>
    
    <item>
      <title>Register Agent</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-register-agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-register-agent/</guid>
      <description>TBD</description>
    </item>
    
    <item>
      <title>SOFAMesh 介绍</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/overview/</guid>
      <description>该项目仓库已弃用。该项目将直接向 Istio 贡献，不会继续在 fork 的仓库中开发，请转至 Istio 官网。 SOFAMesh 是基于 Istio 改进和扩展而来的 Service Mesh 大规模落地实践方案。在继承 Istio 强</description>
    </item>
    
    <item>
      <title>X-Protocol</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-x-protocol/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-x-protocol/</guid>
      <description>X-Protocol 协议是 SOFAMesh 支持的特殊通用协议，能够以统一的方式接入不同的 RPC 协议，因为无需进行协议解析，不仅能够提供更高的性能, 更能降低接入新协议的开发成本。</description>
    </item>
    
    <item>
      <title>Zookeeper Adpater</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-zookeeper-adapter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-zookeeper-adapter/</guid>
      <description>Zookeeper Adapter 是按照 Istio 注册中心扩展机制开发的一个 Adapter 插件，用于对接所有使用 Zookeeper 作为注册中心的微服务框架。目前已经支持了 SOFARPC，很快将提供对于 Dubbo 的支</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中快速开始</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-setup-zookeeper-quick-start-docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-setup-zookeeper-quick-start-docker/</guid>
      <description>本文旨在描述如何在 Kubernetes 快速开始安装和配置 Istio。 SOFA Mosn 不仅可以支持 Istio 标准的部署模式，也能支持单方面的 Inbound Sidecar，Outbound Sid</description>
    </item>
    
    <item>
      <title>在 Kubernetes 中快速开始</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/sofa-mesh-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/sofa-mesh-setup/</guid>
      <description>本文旨在描述如何在 Kubernetes 快速开始安装和配置 Istio。 SOFA Mosn 不仅可以支持 Istio 标准的部署模式，也能支持单方面的 Inbound Sidecar，Outbound Sid</description>
    </item>
    
    <item>
      <title>安装指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-setup-zookeeper-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-mesh/pilot-setup-zookeeper-installation/</guid>
      <description>在非 Kubernetes 环境下使用 Istio 需要达成以下的关键任务： 为 Istio 控制平面配置 Istio API server，也可以通过 memostore 的方式启动 Pilot 用作演示用途。 给所有微服务实例手工添加 SOFA</description>
    </item>
    
  </channel>
</rss>