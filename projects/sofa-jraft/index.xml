<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFAJRaft on SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/</link>
    <description>Recent content in SOFAJRaft on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Benchmark 数据</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/benchmark-performance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/benchmark-performance/</guid>
      <description>测试代码 测试环境&amp;amp;条件 3 台 16C 20G 内存的 docker 容器作为 server node (3 副本) 2 ~ 8 台 8C docker 容器 作为 client 24 个 raft 复制组，平均每台 server node 上各自有 8 个 leader 负责读写请求</description>
    </item>
    
    <item>
      <title>Counter 例子详解</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/counter-example/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/counter-example/</guid>
      <description>本文档主要介绍一个基于 jraft 的分布式计数器的例子。 场景 在多个节点（机器）组成的一个 raft group 中保存一个分布式计数器，该计数器可以递增和获取，并且在所有</description>
    </item>
    
    <item>
      <title>JRaft RheaKV 用户指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jraft-rheakv-user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jraft-rheakv-user-guide/</guid>
      <description>RheaKV 是一个轻量级的分布式的嵌入式的 KV 存储 lib， rheaKV 包含在 jraft 项目中，是 jraft 的一个子模块。 定位与特性 嵌入式: jar 包方式嵌入到应用中 强一致性: 基于 multi-raft 分布</description>
    </item>
    
    <item>
      <title>JRaft 用户指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jraft-user-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jraft-user-guide/</guid>
      <description>1. 基本概念说明 log index 提交到 raft group 中的任务都将序列化为一条日志存储下来，每条日志一个编号，在整个 raft group 内单调递增并复制到每个 raft 节点。 term 在整个 raft group 中单</description>
    </item>
    
    <item>
      <title>Jepsen 验证</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jepson-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/jepson-test/</guid>
      <description>除了几百个单元测试以及部分 chaos 测试之外, SOFAJRaft 还使用 jepsen 这个分布式验证和故障注入测试框架模拟了很多种情况，都已验证通过： 随机分区，一大一小两个网络分</description>
    </item>
    
    <item>
      <title>Maven 依赖说明</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/maven-dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/maven-dependency/</guid>
      <description>pom依赖 &amp;lt;!-- jraft --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jraft-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- jsr305 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.google.code.findbugs&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jsr305&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.2&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- bolt --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;bolt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.5.3&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hessian&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- log --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.7.21&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- disruptor --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.lmax&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;disruptor&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.7&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.4&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;commons-lang&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-lang&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.6&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- protobuf --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.google.protobuf&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;protobuf-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.5.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- protostuff</description>
    </item>
    
    <item>
      <title>Raft 算法解读</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/raft-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/raft-introduction/</guid>
      <description>Raft 新特性 Strong Leader 更强的领导形式 例如日志条目只会从领导者发送到其他服务器, 这很大程度上简化了对日志复制的管理 Leader Election 使用随机定时器来选举领导者 用最简单</description>
    </item>
    
    <item>
      <title>Road Map</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/road-map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/road-map/</guid>
      <description>SOFAJRaft 2019 年 4-7 月开发计划 (p1) Telnet 服务（或其他，越简单越好），作为一种在线排查问题的手段，主要提供以下几个功能 Raft_stat: 以 node 节点为 root，能列出大部分甚至所有</description>
    </item>
    
    <item>
      <title>SOFAJRaft 介绍</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/overview/</guid>
      <description>本介绍内容来自 braft 文档，原文链接请参见这里。braft 的关于算法和应用本身的文档非常优秀，由于 jraft 脱胎自 braft，我们强烈推荐阅读上述文档以了</description>
    </item>
    
    <item>
      <title>分布式一致性 Raft 与 JRaft</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/consistency-raft-jraft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/consistency-raft-jraft/</guid>
      <description>分布式共识算法 (Consensus Algorithm) 如何理解分布式共识? 多个参与者 针对 某一件事 达成完全 一致 ：一件事，一个结论 已达成一致的结论，不可推翻 有哪些分布式共识算法? P</description>
    </item>
    
    <item>
      <title>如何参与 SOFAJRaft 代码贡献</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/how-to-contribute-code-to-sofajraft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/how-to-contribute-code-to-sofajraft/</guid>
      <description>准备工作 贡献代码前需要先了解 git 工具的使用和 GitHub 网站的使用。 - git 工具用法可以查看 git 官方书籍,需要阅读前几章来熟悉。 - git 协作流程可以查看这篇文章 git</description>
    </item>
    
    <item>
      <title>核心引擎设计</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/engine-architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/engine-architecture/</guid>
      <description>如图: Node Raft 分组中的一个节点，连接封装底层的所有服务，用户看到的主要服务接口，特别是 apply(task) 用于向 raft group 组成的复制状态机集群提交新任务应用到业务状态机</description>
    </item>
    
    <item>
      <title>版本发行日志</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/release-log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/release-log/</guid>
      <description>1.3.2 2020-06-19 Bug Fixes 移除对 bolt address parser 的扩展，避免 check connection 返回结果不符合预期 SPI 组件 JRaftServiceLoader 改为延迟加载策略规避多余对象的创建 几个 corner case 修复，比如 replicate logs 如果比 appliedI</description>
    </item>
    
    <item>
      <title>用户案例</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/user-stories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-jraft/user-stories/</guid>
      <description>RheaKV：基于 JRaft 和 RocksDB 实现的嵌入式、分布式、高可用、强一致的 KV 存储类库。 AntQ Streams QCoordinator： 使用 JRaft 在 coordinator 集群内做选举、元信息存储等</description>
    </item>
    
  </channel>
</rss>