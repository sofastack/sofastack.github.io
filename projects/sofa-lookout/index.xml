<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOFALookout on SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/</link>
    <description>Recent content in SOFALookout on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SOFALookout 介绍</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/overview/</guid>
      <description>SOFALookout 是蚂蚁金服开源的一款解决系统的度量和监控问题的轻量级中间件服务。它提供的服务包括：Metrics 的埋点、收集、加工、存储与查询等。该开源项</description>
    </item>
    
    <item>
      <title>SOFALookout 服务端快速开始</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-metrics-server/</guid>
      <description>1.使用本机 ES 服务 1)本地启动 ES docker run -d --name es -p 9200:9200 -p 9300:9300 -e &amp;quot;discovery.type=single-node&amp;quot; elasticsearch:5.6 版本：V5，V6 2)检查 ES 是否健康 http://localhost:9200/_cat/health?v 3)启动 Lookout 服务 执行 all-in-one-bootstrap 编译后的 fat-jar 包，如何获得，见文</description>
    </item>
    
    <item>
      <title>SOFARPC Metrics 指标</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/sofarpc-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/sofarpc-metrics/</guid>
      <description>SOFARPC 目前度量了两个指标。 服务端线程池 metric name metric tags specification rpc.bolt.threadpool.config bolt 线程池配置 主要包括 rpc 服务端的线程池配置信息 rpc.bolt.threadpool.active.count 当前线程池的运行线程 rpc.bolt.threadpool.idle.count 当前线程池的空闲线程 rpc.bolt.threadpool.queue.size 当前</description>
    </item>
    
    <item>
      <title>内置扩展 Metrics 指标</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/client-ext-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/client-ext-metrics/</guid>
      <description>目前默认生效的的扩展模块是：lookout-ext-jvm，lookout-ext-os(from v1.5.0)。 JVM 线程 metric name metric tags specification jvm.threads.totalStarted &amp;mdash; jvm.threads.active &amp;mdash; jvm.threads.peak</description>
    </item>
    
    <item>
      <title>发展规划</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/plan/</guid>
      <description>客户端发展规划 v2.0 ，在基于 Java 8 进行重构，v1.0 为支持 Java 6 做了些设计与性能妥协； 集成更多的开源产品；</description>
    </item>
    
    <item>
      <title>客户端 API 使用指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-api/</guid>
      <description>客户端 API 使用说明 SOFALookout 客户端设计上保持了 API 与实现解耦。如果我们只需要基于 SOFALookout API 进行埋点，那么只需要依赖 API 包即可。在没有依赖具体实现模块依赖时（比如</description>
    </item>
    
    <item>
      <title>客户端 Registry 使用指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-registry/</guid>
      <description>Registry 的使用 不同的 Registry 的集成提供了不同的访问 Metrics 的方式。 1. LookoutRegistry 提供按照一定时间窗口统计 metrics 的能力。它又分为“主动推”和“被动拉”两种模式，暂时被动拉取模</description>
    </item>
    
    <item>
      <title>客户端快速开始 - SOFABoot 项目</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-client-boot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-client-boot/</guid>
      <description>该项目演示了如何在 SOFABoot 中使用 SOFALookout 并且对接到 Spring Boot 的 Actuator 中。如果想要对接到 Prometheus 上或者其他的 Registry 中，请参考 Registry 一节。 新建 SpringBoot（或 SofaBoot ）项目 新建一</description>
    </item>
    
    <item>
      <title>客户端快速开始 - 普通 Java 项目</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-client-java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/quick-start-client-java/</guid>
      <description>普通 Java 项目 在应用中加入 client 的 Maven 依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sofa.lookout&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lookout-client&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${lookout.client.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; lookout-client 默认依赖了 lookout-reg-server 模块（支持向 lookout server 上报 metrics 数据），如果希望使用其他类型注册表(比如 lookout-reg</description>
    </item>
    
    <item>
      <title>客户端配置</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/client-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/client-configuration/</guid>
      <description>客户端配置项设置示例 lookoutConfig.setProperty(LookoutConfig.LOOKOUT_AGENT_HOST_ADDRESS,&amp;quot;127.0.0.1&amp;quot;); 客户端配置项说明 配置项 对应 SpringBoot 配置项 默认配置值 说明 lookout.enable com.alipay.sofa.lookout.enable true 功能开关，默认是 true。如果改为 false，那么所有 metrics 就几乎没</description>
    </item>
    
    <item>
      <title>工程示例</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-samples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-samples/</guid>
      <description>源码工程中提供了一些样例工程，辅助说明项目的使用。样例工程的 readme 有使用补充说明，另外需要将这些 sample 工程单独的导入 IDE。 客户端样例工程 lookout-client-samples-java 该样例工</description>
    </item>
    
    <item>
      <title>常见问题</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/faq/</guid>
      <description>与 Prometheus的差异 答：主要包括:（1）Lookout metrics server 支持适配更多的协议接入；（2）聚焦在围绕 ES 生态提供易使用和运维的最佳实践；</description>
    </item>
    
    <item>
      <title>开发指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/development-use-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/development-use-guide/</guid>
      <description>首先参考基本代码贡献需知 注意测试用例覆盖率； 代码格式； 验证 Samples 单独导入 Samples 的 Maven 项目； 修改对应 Pom 文件中依赖版本； 验证 Samples 也能正确工作；</description>
    </item>
    
    <item>
      <title>服务器端 ES 存储使用指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-es/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-es/</guid>
      <description>自动化 推荐版本: ES 5 自动初始化库 Lookout 服务器端启动时，会自动检查（默认开启，可关闭）所连接的ES机器(或集群)，检查 Metrics 数据存储的 Index和 Mapping 是</description>
    </item>
    
    <item>
      <title>服务器端 Grafana 使用指南</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-grafana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-grafana/</guid>
      <description>由于 SOFALookout Metrics Server 兼容 Prometheus API,所以 Grafana 集成 Lookout 很简单，只需要选择 Prometheus 作为数据源协议即可 （注意 Lookout Server 的默认查询端口也是: 9090）。 下图展示 Grafana 新增数据源配置</description>
    </item>
    
    <item>
      <title>服务器端 Metrics 存储扩展机制</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-storage-ext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-storage-ext/</guid>
      <description>如果需要扩展支持适配一个新的数据存储，可能需要下面的步骤: 1.写入适配 需要在 gateway/metrics/exporter/ 下面添加新的 exporter; 参考已有的 &amp;ldquo;gateway/metrics/exporter/elasticsearch&amp;rdquo; 模块； 提供个新存储的 MetricExporter 功能是写入数据</description>
    </item>
    
    <item>
      <title>服务器端 PromQL 语法特性增强</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-promql-feature-enhancement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-promql-feature-enhancement/</guid>
      <description>1. Tag选择器的“in”筛选 =~| 将tag符合表达式的提供的值选择出来，类似于SQL中的in语义 示例 将app为 foo 或 foo2的应用时序数据查询出来</description>
    </item>
    
    <item>
      <title>服务器端常见数据采集协议支持</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-other-metrics-protocol-support/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/sofa-lookout/use-guide-other-metrics-protocol-support/</guid>
      <description>使用 Lookout sdk是推荐方式，当然 Lookout gateway 还支持其他协议上报。（但由于属于非标接入，细节可联系我们） 注意如果使用 非lookout sdk ，自己一定注意控制客</description>
    </item>
    
  </channel>
</rss>