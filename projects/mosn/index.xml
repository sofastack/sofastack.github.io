<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MOSN on SOFAStack</title>
    <link>https://sofastack.github.io/sofastack.tech/projects/mosn/</link>
    <description>Recent content in MOSN on SOFAStack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    
	<atom:link href="https://sofastack.github.io/sofastack.tech/projects/mosn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MOSN 0.1.0 性能报告</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/reference-performance-report010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/reference-performance-report010/</guid>
      <description>以下的的性能报告为 MOSN 0.1.0 在做 Bolt 与 HTTP1.x 协议的纯 TCP 转发上与 envoy 的一些性能对比数据，主要表现在 QPS、RTT、失败率/成功率等。 这里需要强调的是，为了提</description>
    </item>
    
    <item>
      <title>MOSN 0.2.1 性能报告</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/reference-performance-report021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/reference-performance-report021/</guid>
      <description>以下性能报告的基准版本为 MOSN 0.2.1。在 0.2.1 版本中，我们进行了如下一些优化手段： - 添加内存复用框架，涵盖 io/protocol/stream/proxy 层级，减少对象分配、内存使用和 GC 压力</description>
    </item>
    
    <item>
      <title>MOSN 介绍</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/overview/</guid>
      <description>MOSN 的官方网站 mosn.io 正在建设中，文档临时托管在这里。 MOSN 是一款使用 Go 语言开发的网络代理软件，作为云原生的网络数据平面，旨在为服务提供多协议，模块化，</description>
    </item>
    
    <item>
      <title>使用 MOSN 搭建 Service Mesh 平台</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-run-with-sofamesh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-run-with-sofamesh/</guid>
      <description>本文将介绍如何使用 MOSN 在 SOFAMesh 框架下搭建 Service Mesh 的开发环境，并验证 MOSN 的一些基础路由能力、负载均衡能力等。本文介绍的内容将包括 : MOSN 与 SOFAMesh 的关系 准备工作 源码</description>
    </item>
    
    <item>
      <title>发布历史</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/release-notes/</guid>
      <description>更多参见：https://github.com/mosn/mosn/blob/master/CHANGELOG_ZH.md</description>
    </item>
    
    <item>
      <title>工程示例</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-run-samples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-run-samples/</guid>
      <description>本文档中提供了 MOSN 的示例工程。 使用 MOSN 作为 HTTP 代理 请参考 MOSN 转发 HTTP 的示例工程 http-sample。 使用 MOSN 作为 SOFARPC 代理 请参考 MOSN 转发 SOFARPC 的示例工程 sofa</description>
    </item>
    
    <item>
      <title>快速开始</title>
      <link>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sofastack.github.io/sofastack.tech/projects/mosn/quick-start-setup/</guid>
      <description>本文用于帮助初次接触 MOSN 项目的开发人员，快速搭建开发环境，完成构建，测试，打包和示例代码的运行。 注：MOSN 基于 Go 1.12.7 开发，使用 dep 进行依赖管理。</description>
    </item>
    
  </channel>
</rss>